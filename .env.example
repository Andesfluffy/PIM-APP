# Example environment configuration

# Vercel Postgres connection (pooled) â€” use this for serverless/production
# If you accidentally put a direct (non-pooled) URL here, the app will now
# fall back automatically, but you should still set the correct pooled URL.
POSTGRES_URL="postgres://<user>:<password>@<pooled-host>:5432/<database>?sslmode=require"

# Firebase credentials (optional for auth features)
NEXT_PUBLIC_FIREBASE_API_KEY=
NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=
NEXT_PUBLIC_FIREBASE_PROJECT_ID=
NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=
NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=
NEXT_PUBLIC_FIREBASE_APP_ID=

# Firebase Admin (server-side token verification)
# You can generate a service account in Firebase Console -> Project Settings -> Service Accounts
FIREBASE_ADMIN_PROJECT_ID=
FIREBASE_ADMIN_CLIENT_EMAIL=
# Paste the private key with literal \n sequences or include real newlines
FIREBASE_ADMIN_PRIVATE_KEY=

# Postgres (required for the Notes/Tasks/Contacts APIs)
# Provide either or both of the following:
# 1) Pooled (recommended in prod):
#    POSTGRES_URL=postgres://user:password@...-pooler....neon.tech/neondb?sslmode=require
# 2) Non-pooled/direct (useful locally):
#    POSTGRES_URL_NON_POOLING=postgres://user:password@....neon.tech/neondb?sslmode=require
# If POSTGRES_URL is set to a direct/non-pooled URL by mistake,
# the app will automatically fall back to a direct client.
POSTGRES_URL=
POSTGRES_URL_NON_POOLING=

# API base URL for frontend service calls (only if overriding default)
NEXT_PUBLIC_API_URL=https://your-domain.vercel.app/api
